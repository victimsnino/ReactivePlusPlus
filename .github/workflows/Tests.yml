name: Unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
        -  name: "Linux GCC"
           os: ubuntu-latest
           cc: "gcc"
           cxx: "g++"
        -  name: "Linux CLANG"
           os: ubuntu-latest
           cc: "clang" 
           cxx: "clang++"
        -  name: "Windows MSVC"
           os: windows-latest
           cc: "cl"
           cxx: "cl"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.TOKEN }}
    
    
    - name: Configure CMake
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Test Report ${{ matrix.config.name }}
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test report ${{ matrix.config.name }} 
        path: ./build/test_results/*.xml
        reporter: java-junit

    - name: Run benchmarks only
      run: ${{github.workspace}}/build/bin/rpp_tests [benchmark] | tee ${{github.workspace}}/test_results/benchmark_result.txt

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: Catch2 Benchmark ${{ matrix.config.name }}
        tool: 'catch2'
        output-file-path: ${{github.workspace}}/test_results/benchmark_result.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: github.event_name != 'pull_request'
        # Show alert with commit comment on detecting possible performance regression
        alert-threshold: '200%'
        comment-on-alert: true
        comment-always: true
        fail-on-alert: true
  
