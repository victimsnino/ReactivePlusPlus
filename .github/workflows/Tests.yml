name: Unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CCACHE_VERSION: 4.4

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
        -  name: "Linux GCC"
           os: ubuntu-latest
           cc: "gcc"
           cxx: "g++"
           relative_path_bench: "build/bin/rpp_tests"
        -  name: "Linux CLANG"
           os: ubuntu-latest
           cc: "clang" 
           cxx: "clang++"
           relative_path_bench: "build/bin/rpp_tests"
        -  name: "Windows MSVC"
           os: windows-latest
           cc: "cl"
           cxx: "cl"
           relative_path_bench: "build/bin/Release/rpp_tests"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.TOKEN }}
        
    - name: Download ccache
      id: ccache
      shell: cmake -P {0}
      run: |
        set(ccache_url "https://github.com/cristianadam/ccache/releases/download/v$ENV{CCACHE_VERSION}/${{ runner.os }}.tar.xz")
        file(DOWNLOAD "${ccache_url}" ./ccache.tar.xz SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ccache.tar.xz)
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${{ matrix.config.name }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          ${{ matrix.config.name }}-ccache-
    
    - name: Configure CMake
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache
      
    - name: Configure CCache
      shell: cmake -P {0}
      run: |
        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}" ccache_basedir)
        set(ENV{CCACHE_BASEDIR} "${ccache_basedir}")
        set(ENV{CCACHE_DIR} "${ccache_basedir}/.ccache")
        set(ENV{CCACHE_COMPRESS} "true")
        set(ENV{CCACHE_COMPRESSLEVEL} "6")
        set(ENV{CCACHE_MAXSIZE} "400M")
        if ("${{ matrix.config.cxx }}" STREQUAL "cl")
          set(ENV{CCACHE_MAXSIZE} "600M")
        endif()
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Test Report ${{ matrix.config.name }}
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test report ${{ matrix.config.name }} 
        path: ./build/test_results/*.xml
        reporter: java-junit

    - name: Run benchmarks only
      run: ${{github.workspace}}/${{ matrix.config.relative_path_bench }} [benchmark] > ${{github.workspace}}/build/test_results/benchmark_result.txt
      if: matrix.config.relative_path_bench != ''

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      if: matrix.config.relative_path_bench  != ''
      with:
        name: Catch2 Benchmark ${{ matrix.config.name }}
        tool: 'catch2'
        output-file-path: ${{github.workspace}}/build/test_results/benchmark_result.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: false
        # Show alert with commit comment on detecting possible performance regression
        alert-threshold: '200%'
        comment-on-alert: true
        comment-always: true
        fail-on-alert: false
  
    - name: Push benchmark result
      if: github.event_name != 'pull_request' &&  matrix.config.relative_path_bench != ''
      run: git push 'https://victimsnino:${{ secrets.GITHUB_TOKEN }}@github.com/victimsnino/ReactivePlusPlus.git' gh-pages:gh-pages
