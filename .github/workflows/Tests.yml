name: Unit tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
    types: [opened, reopened, synchronize, ready_for_review]
    

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    if: github.event.pull_request.draft == false
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
        -  name: "Linux GCC"
           os: ubuntu-latest
           cc: "gcc-10"
           cxx: "g++-10"
           relative_path_bench: "build/bin/rpp_benchmark"
           relative_path_rxcpp_bench: "build/bin/rxcpp_benchmark"
        -  name: "Linux CLANG"
           os: ubuntu-latest
           cc: "clang" 
           cxx: "clang++"
           relative_path_bench: "build/bin/rpp_benchmark"
           relative_path_rxcpp_bench: "build/bin/rxcpp_benchmark"
        -  name: "Windows MSVC"
           os: windows-latest
           cc: "cl"
           cxx: "cl"
           relative_path_bench: "build/bin/Release/rpp_benchmark"
           relative_path_rxcpp_bench: "build/bin/Release/rxcpp_benchmark"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup cache
      uses: mikehardy/buildcache-action@v1
      if: matrix.config.os != 'windows-latest'
      with:
        cache_key: ${{ matrix.config.name }}
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      if: matrix.config.name == 'Linux CLANG'
      with:
        languages: cpp
      
    - name: Configure CMake
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: cmake -B ${{github.workspace}}/build -DBUILD_SAMPLES=1 -DBUILD_TESTS=1 -DAUTOTESTS=1 -DCATCH_CONFIG_FAST_COMPILE=1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER_LAUNCHER=buildcache -DCMAKE_CXX_COMPILER_LAUNCHER=buildcache
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Run benchmarks only
      run: |
        ${{github.workspace}}/${{ matrix.config.relative_path_bench }} -r xml -o ${{github.workspace}}/build/test_results/rpp_benchmark_result.txt
        ${{github.workspace}}/${{ matrix.config.relative_path_rxcpp_bench }} -r xml -o ${{github.workspace}}/build/test_results/rxcpp_benchmark_result.txt
    
    - name: Save the PR number in an artifact
      shell: bash
      env:
        PR_NUM: ${{ github.event.number }}
      run: echo $PR_NUM > pr_num.txt

    - name: Upload the PR number
      uses: actions/upload-artifact@v2
      with:
        name: pr_num
        path: ./pr_num.txt

    - name: Upload parsed results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ${{ matrix.config.name }}
        path: ${{github.workspace}}/build/test_results/

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      if: matrix.config.name == 'Linux CLANG'