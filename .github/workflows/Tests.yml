name: Run unit tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
        - {
            name: "Linux GCC"
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Linux CLANG"
            os: ubuntu-latest,
            cc: "clang", cxx: "clang++"
          }
        - {
            name: "Windows MSVC"
            os: windows-latest,
            cc: "cl", cxx: "cl"
          }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.TOKEN }}
    
    
    - name: Configure CMake
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: ${{github.workspace}}/build/test_results/*.xml
        report_individual_runs: true
