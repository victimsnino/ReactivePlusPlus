name: CodeCoverage Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_and_generate_report:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Update apt-get
      run: sudo apt-get update

    # LCOV
    - name: Install lcov
      run: sudo apt-get install lcov
    
    # CODECOV
    - name: Install codecov
      shell: bash
      run: sudo pip install codecov

    - name: Configure CMake
      env:
        CC: clang
        CXX: clang++
      run: cmake -B ${{github.workspace}}/build -DAUTOTESTS=1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCODE_COVERAGE=1
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
             
    - name: Code coverage - Capture coverage info
      run: lcov --gcov-tool /usr/bin/gcov-10 --directory build --capture --output-file coverage.info -b .
    - name: Code coverage - Filter out system, external, and unit test source files
      run: lcov --gcov-tool /usr/bin/gcov-10 --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '*/tests/*' '*/submodules/*' --output-file coverage.info
    - name: Code coverage - Output coverage data for debugging
      run: lcov --gcov-tool /usr/bin/gcov-10  --list coverage.info
    - name: Upload
      run:  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
