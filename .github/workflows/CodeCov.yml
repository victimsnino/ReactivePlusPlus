name: CodeCoverage Report

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.py'
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  build_and_generate_report:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Install deps
      run: |
        sudo apt-get update
        sudo apt-get install lcov
        sudo pip install codecov

    - name: Build sources and run tests
      env:
        CC: gcc-10
        CXX: g++-10
      uses: ./.github/actions/build_and_test
      with:
        run_name: 'CodeCoverage'
        use_build_cache: true
        cmake_defs: '-DAUTOTESTS=1 -DBUILD_TESTS=1 -DCODE_COVERAGE=1'
        build_type: 'Debug'
        run_tests: true

    - name: Code coverage - Capture coverage info
      run: lcov --gcov-tool /usr/bin/gcov-10 --directory build --capture --output-file coverage.info -b .
    - name: Code coverage - Filter out system, external, and unit test source files
      run: lcov --gcov-tool /usr/bin/gcov-10 --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '*/tests/*' '*/submodules/*' --output-file coverage.info
    - name: Code coverage - Output coverage data for debugging
      run: lcov --gcov-tool /usr/bin/gcov-10  --list coverage.info
    - name: Upload
      run:  bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
